<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>some tech and other talks</title>
    <link>https://tgib23.github.io/</link>
    <description>Recent content on some tech and other talks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Nov 2021 11:16:50 +0900</lastBuildDate><atom:link href="https://tgib23.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Similarities between Matrix series and Nausicaa of the Valley of the Wind</title>
      <link>https://tgib23.github.io/blog/2021/11/20/similarities-between-matrix-series-and-nausicaa-of-the-valley-of-the-wind/</link>
      <pubDate>Sat, 20 Nov 2021 11:16:50 +0900</pubDate>
      
      <guid>https://tgib23.github.io/blog/2021/11/20/similarities-between-matrix-series-and-nausicaa-of-the-valley-of-the-wind/</guid>
      <description>The Matrix 4 is coming out! I love this series and I can&amp;rsquo;t wait for it now.
  I personally like Matrix the 2nd and the 3rd ones as well, but I think they tend to have fewer fans because the story is more complicated and harder to understand compared to the 1st one. When I first saw them, I lost confidence in myself to follow the story in the middle of the 2nd, but after I realized that the structure of the story was similar to the manga version of Nausicaä of the Valley of the Wind that I had read, I was able to enjoy watching it very much (whether I understood it properly or not).</description>
    </item>
    
    <item>
      <title>マトリックスと風の谷のナウシカの共通点について</title>
      <link>https://tgib23.github.io/blog/2021/11/19/similarities-between-matrix-series-and-nausicaa-of-the-valley-of-the-wind/</link>
      <pubDate>Fri, 19 Nov 2021 00:33:04 +0900</pubDate>
      
      <guid>https://tgib23.github.io/blog/2021/11/19/similarities-between-matrix-series-and-nausicaa-of-the-valley-of-the-wind/</guid>
      <description>マトリックス4が公開されますね！このシリーズ大好きなので今から待ち遠しいです。
  個人的にマトリックスの2と3も好きなのですが、1に比べると話が複雑になり、理解しづらくなるからかファンが少ない傾向にあると思います。 私も最初見たときは2の途中からついていっている自信がなくなりましたが、その後読んだ風の谷のナウシカの漫画版と話の構造が似ていることに気づいてからは、（私がちゃんと理解できているかはともかく）非常に楽しく鑑賞出来るようになりましたので、そのことについて触れてみたいと思います。ちなみに話の内容については説明しないので、未見の方は以下のリンクより購入してフォローしてください。
For English veriosn, please access here
  マトリックス コンプリート・トリロジー [Blu-ray]  amazon.co.jp      風の谷のナウシカ 全7巻箱入りセット  amazon.co.jp      風の谷のナウシカ [Blu-ray]  amazon.co.jp    以降はネタバレとなりますのでご注意ください。 また、当然ですが、マトリックスは攻殻機動隊をはじめ、多くの作品の影響を受けて作られていますし、風の谷のナウシカもそうであると思います。 そのため、この2作品のみを比較して語ること自体がバランスを欠いた物語の理解に繋がる可能性はありますので、その点はご容赦ください。 単純に2作品が似ている、と言いたいだけのポストです。 最後に、ここで語る内容については完全に私の私見&amp;quot;のみ&amp;quot;であり、監督や関係者のインタビューなどで裏を固めた文章ではありませんのでご注意ください。
はじめに 風の谷のナウシカはスタジオジブリの1作目の映画で、同名の漫画が原作になっています。 漫画の連載開始が1982、映画の公開が1984、そしてその後漫画の制作が継続され1994に完結しています。 つまり、映画版は原作の漫画のほんの一部であり、実際に7巻あるうちの2巻目の途中で映画の内容は終わってしまいます。 映画版については非常に分かりやすいストーリー構成になっているのですが、その後の漫画版は非常に複雑で難解と言えます。 物語を難解にしている要素の一つは、この物語が内容が読み手の期待した方向に向かわない点です。 映画版で見ていたナウシカは生き物すべてを愛する、優しく美しい少女です。 映画版で自分を犠牲にして王蟲を助ける姿に感動した観客としては、その後の漫画版でも無垢なままのナウシカが健気に活躍する姿を予想したくなります。 ところが、その後のナウシカは巨神兵を操り、血みどろになりながら人類の闇と向き合う人物に変わっていきます。 ナウシカ自身が一生懸命であることには変わりないのですが、読み手としてはこの変化についていけないと物語の理解が進まなくなると思います。
同様にマトリックスも1は分かりやすいSF映画で、自らが背負った運命に戸惑いながらも仲間との友情やトリニティの愛により覚醒していくネオの冒険活劇、という普遍的なストーリーになっていると思います。 1のクライマックスからネオがマトリックスにつながれた全人類を救う続編を期待した人も多かったのではないでしょうか？ ところが、全人類を救うはずだったアーキテクトとのコンタクトから物語は急展開し、3でのネオはザイオンを救うものの、ライバルのエージェント・スミスには負けた形となり、さらにマトリックスのシステムにつながった人たちはどうなったんだろう？という疑問に答えないまま物語は終了します。 そのため、見た後にどうもスッキリ出来ないという感覚になると思います。
マトリックスとナウシカはこの客を裏切る展開という点だけではなく物語の構成自体や登場人物の役割などに共通点があると思います。（Visualでの共通点、というか影響については既に語られていますので こちら をどうぞ） これらを比較していくと、より両者のストーリー展開の理解が進むので面白いと思います。 では、1つずつ共通点を見ていきましょう。
1. 背景 どちらの世界でも人類は瀕死の状態にあります。 マトリックスでは機械の脅威にさらされ、ナウシカでは腐海と戦争の脅威にさらされています。
2. 救世主の存在と運命 どちらの世界においても救世主が現れてこの世界を救うという予言が流布しています。 マトリックスではネオが&amp;quot;the one&amp;quot;、ナウシカではナウシカが&amp;quot;青き衣の者&amp;quot;としてこれに該当します。</description>
    </item>
    
    <item>
      <title>Add Google Plus and Instagram Login with Omniauth &#43; Devise on Rails5</title>
      <link>https://tgib23.github.io/blog/2017/11/12/add-google-plus-and-instagram-login-with-omniauth-plus-devise-on-rails5/</link>
      <pubDate>Sun, 12 Nov 2017 16:23:58 +0900</pubDate>
      
      <guid>https://tgib23.github.io/blog/2017/11/12/add-google-plus-and-instagram-login-with-omniauth-plus-devise-on-rails5/</guid>
      <description>This post shows how to implement google plus and instagram login with omniauth and devise on rails5. This change totally depends on my previous implementation for facebook and twitter, so if you are new to implement this, you should look at those posts first. I write about google plus first, then add instagram login later.
Implement Google Plus Login 0. Get Google APP ID and SECRET You can get CLIENT ID and CLIENT_SECRET from here.</description>
    </item>
    
    <item>
      <title>How to access MapR Streams from Python bindings</title>
      <link>https://tgib23.github.io/blog/2017/08/22/how-to-access-mapr-streams-from-python-bindings/</link>
      <pubDate>Tue, 22 Aug 2017 15:38:09 +0900</pubDate>
      
      <guid>https://tgib23.github.io/blog/2017/08/22/how-to-access-mapr-streams-from-python-bindings/</guid>
      <description>From MEP 3.0, MapR offers Python binding for MapR Streams. This article show how to use it with sample code.
Step 0. The environment is as follows.
 CentOS : 7.2 MapR 5.2.2 MEP 3.1 python-2.7.5-48.el7.x86_64 python-devel-2.7.5-48.el7.x86_64  Step 1. Create stream and topic as follows.
$ maprcli stream create -path /streams/python-test-stream -produceperm p -consumeperm p -topicperm p $ maprcli stream topic create -path /streams/python-test-stream -topic test-topic Step 2. Install what you need.</description>
    </item>
    
    <item>
      <title>How to setup Squirrel SQL Client on Mac for Hive, Drill, and Impala on MapR cluster</title>
      <link>https://tgib23.github.io/blog/2017/05/24/how-to-setup-squirrel-sql-client-on-mac-for-hive-spark-and-drill-on-mapr-cluster/</link>
      <pubDate>Wed, 24 May 2017 17:35:18 +0900</pubDate>
      
      <guid>https://tgib23.github.io/blog/2017/05/24/how-to-setup-squirrel-sql-client-on-mac-for-hive-spark-and-drill-on-mapr-cluster/</guid>
      <description>This post shows how to setup Squirrel SQL client for Hive, Drill, and Impala on Mac. I assume Mac client is already setup and this is the case with MapR 5.2.1 and MEP 3.0. Change the version numbers if you set up with other MapR or MEP versions.
Install Squirrel Go to http://www.squirrelsql.org/#installation and follow the instruction.
Then, Launch Squirrel App from Application Directory.
Use Hive from Squirrel You have to follow three steps, bring jars, configuration, and run the query.</description>
    </item>
    
    <item>
      <title>Add twitter login with Omniauth &#43; Devise on Rails5</title>
      <link>https://tgib23.github.io/blog/2017/01/09/add-twitter-login-with-omniauth-plus-devise-on-rails5/</link>
      <pubDate>Mon, 09 Jan 2017 15:15:27 +0900</pubDate>
      
      <guid>https://tgib23.github.io/blog/2017/01/09/add-twitter-login-with-omniauth-plus-devise-on-rails5/</guid>
      <description>This post follows previous post How to use Omniauth + Devise on Rails5 from scratch, which is about how to setup facebook login. This post shows how to additionally setup twitter login. You can get APP ID and APP SECRET from here.
1. initial step add omniauth-twitter in Gemfile
$ diff --git a/Gemfile b/Gemfile index de3f792..271a916 100644 --- a/Gemfile +++ b/Gemfile @@ -56,3 +56,4 @@ gem &amp;#39;devise&amp;#39; gem &amp;#39;omniauth&amp;#39; gem &amp;#39;omniauth-facebook&amp;#39; gem &amp;#39;dotenv-rails&amp;#39; +gem &amp;#39;omniauth-twitter&amp;#39; $ bundle install $ gem list | grep omniauth omniauth (1.</description>
    </item>
    
    <item>
      <title>How to use Omniauth &#43; Devise on Rails5 from scratch</title>
      <link>https://tgib23.github.io/blog/2016/11/10/how-to-use-omniauth-plus-devise-on-rails5/</link>
      <pubDate>Thu, 10 Nov 2016 00:11:23 +0900</pubDate>
      
      <guid>https://tgib23.github.io/blog/2016/11/10/how-to-use-omniauth-plus-devise-on-rails5/</guid>
      <description>This post is no-brainer step by step memo to use omniauth and devise on rails5 for setting up oauth webapp with facebook. Rails 5.0.0.1, ruby 2.3.0, devise 4.2.0, omniauth 1.3.1, omniauth-facebook 4.0.0 are used.
0. env &amp;amp; requiement $ ruby -v ruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15] $ rails -v Rails 5.0.0.1 Obtain facebook AppID and AppSecret from https://developers.facebook.com/
1. initial steps create rails app
$ rails new omniauth &amp;amp;&amp;amp; cd omniauth modify Gemfile and add devise and omniauth</description>
    </item>
    
    <item>
      <title>Behavior of Hbase Read/Write Requests Counter</title>
      <link>https://tgib23.github.io/blog/2016/10/29/behavior-of-hbase-read-slash-write-requests-counter/</link>
      <pubDate>Sat, 29 Oct 2016 23:10:50 +0900</pubDate>
      
      <guid>https://tgib23.github.io/blog/2016/10/29/behavior-of-hbase-read-slash-write-requests-counter/</guid>
      <description>HBase has Read/Write Requests System Counter feature and we can monitor it from HBase Web UI or API. Against my instincts, the numbers of those counters could DECREASE while running. This article covers how we could see the decrease of those counters.
We can see read/write request counters of HBase from
http://master-server-node:60010/master-status#requestStats
or
http://region-server-nodes:60010/jmx
These numbers are calculated by summing each region’s counts. Check the iteration part of the code. https://github.</description>
    </item>
    
    <item>
      <title>install npm package from npm pack-ed file using ansible</title>
      <link>https://tgib23.github.io/blog/2016/03/20/install-npm-package-from-npm-pack-ed-file-using-ansible/</link>
      <pubDate>Sun, 20 Mar 2016 22:28:10 +0900</pubDate>
      
      <guid>https://tgib23.github.io/blog/2016/03/20/install-npm-package-from-npm-pack-ed-file-using-ansible/</guid>
      <description>In case you want to install npm package file, created by &amp;ldquo;npm pack&amp;rdquo; command, just specify the path to the file to &amp;ldquo;name&amp;rdquo;.
description: Install &amp;quot;sample&amp;quot; node.js package, created by &amp;quot;npm pack&amp;quot;, located at /tmp/sample.tar.gz - npm: name=/tmp/sample.tar.gz path=/app/location That&amp;rsquo;s it.</description>
    </item>
    
    <item>
      <title>use extra-vars of ansible from packer</title>
      <link>https://tgib23.github.io/blog/2015/11/15/use-extra-vars-of-ansible-from-packer/</link>
      <pubDate>Sun, 15 Nov 2015 00:47:21 +0900</pubDate>
      
      <guid>https://tgib23.github.io/blog/2015/11/15/use-extra-vars-of-ansible-from-packer/</guid>
      <description>ansible&amp;rsquo;s &amp;quot;&amp;ndash;extra-vars&amp;quot; is the option to pass variables from command line. In using packer with ansible, you can still specify &amp;ldquo;&amp;ndash;extra-vars&amp;rdquo; through packer&amp;rsquo;s &amp;ldquo;extra_arguments&amp;rdquo;. Here&amp;rsquo;some example.
 ansible  We consider the case that we specify parameter &amp;ldquo;base_ami&amp;rdquo;, &amp;ldquo;parameter_1&amp;rdquo;, and &amp;ldquo;parameter_2&amp;rdquo; for ansible. {% raw %}
$ cat sample.yml - hosts: sample roles: sample_dir vars: base_ami: &amp;#39;{{ base_ami }}&amp;#39; parameter_1: &amp;#39;{{ parameter_1 }}&amp;#39; parameter_2: &amp;#39;{{ parameter_2 }}&amp;#39; {% endraw %}</description>
    </item>
    
    <item>
      <title>deploy rails websocket app into heroku</title>
      <link>https://tgib23.github.io/blog/2014/10/30/deploy-rails-websocket-app-into-heroku/</link>
      <pubDate>Thu, 30 Oct 2014 00:14:33 -0500</pubDate>
      
      <guid>https://tgib23.github.io/blog/2014/10/30/deploy-rails-websocket-app-into-heroku/</guid>
      <description>This post is to explain the configuration example to use heroku to deploy app with websocket-rails. The app is implemented in the previous post using standalone mode websocket server on local dev environment.
1. create heroku Sign up for heroku and install heroku tool. Follow the heroku setup instruction in the rails tutorial.
$ heroku create Creating gentle-tor-1752... done, stack is cedar https://gentle-tor-1752.herokuapp.com/ | git@heroku.com:gentle-tor-1752.git Now got gentle-tor-1752 for this entry.</description>
    </item>
    
    <item>
      <title>initial steps to use websocket-rails</title>
      <link>https://tgib23.github.io/blog/2014/08/03/initial-steps-to-use-websocket-rails/</link>
      <pubDate>Sun, 03 Aug 2014 21:39:04 +0900</pubDate>
      
      <guid>https://tgib23.github.io/blog/2014/08/03/initial-steps-to-use-websocket-rails/</guid>
      <description>This is the very initial steps to use websocket-rails. Basically, I follow the lessons from here. I also add some suplemental steps for smooth start and hopefully next steps to utilize this library.
1. prepare $ ruby -v ruby 2.1.0p0 (2013-12-25 revision 44422) [x86_64-darwin11.0] $ rails -v [~/Dropbox/rails] Rails 4.1.4 $ gem -v 2.2.2 $ rails new websocket_rails_example &amp;amp;&amp;amp; cd websocket_rails_example ... ... $ gem install websocket-rails Welcome to WebsocketRails v0.</description>
    </item>
    
  </channel>
</rss>
